<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://code.alibabatech.com/schema/dubbo
       http://code.alibabatech.com/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    <aop:config proxy-target-class="true" />
    <!--注册annotation -->
    <context:annotation-config />

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
        <property name="defaultEncoding">
            <value>UTF-8</value>
        </property>
    </bean>


    <!-- 启用新的PropertyPlaceholderConfigurer,zk连接从这里开始 -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="ignoreResourceNotFound" value="true" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="locations">
            <list>
                <!--系统相关配置、数据库配置 -->
                <value>classpath:conf.properties</value>
            </list>
        </property>
        <property name="fileEncoding" value="utf-8" />
    </bean>

    <bean id="commonService" class="org.lynn.idworker.openapi.service.CommonService" />


    <!-- 引入DB数据源 -->
    <!--<import resource="classpath:/spring/dataSource.xml"/>-->
    <!-- 引入基础框架的配置 -->

    <bean id="customUUIDService" class="org.lynn.idworker.openapi.service.CustomUUIDService" >
        <constructor-arg index="0" ref="commonService" />
    </bean>

    <bean id = "idGenService" class="org.lynn.idworker.openapi.service.IdGenService">
        <constructor-arg name="customUUIDService" ref="customUUIDService"/>
    </bean>


    <!-- 提供方应用信息，用于计算依赖关系 -->
    <dubbo:application name="idCenter" owner="cailinfeng" />

    <!-- 使用zookeeper注册中心暴露服务地址 -->
    <dubbo:registry protocol="zookeeper" address="${dubbo.zk.url}" timeout="20000" check="false" />
    <!--<dubbo:registry protocol="zookeeper" address="${dubbo.zk.url}" timeout="${dubbo.zk.timeout}" />-->

    <!-- 用dubbo协议在20888端口暴露服务,默认端口20880,port=-1, 当默认端口被占用，在20880端口自增1 -->
    <dubbo:protocol name="dubbo" port="-1" />

    <!-- http协议暴露端口 这种服务方式，必须要有一个接口被annotation @Path -->
    <!--<dubbo:protocol name="rest" port="8044" server="tomcat" contextpath="config" /> -->
    <dubbo:monitor protocol="registry" />

    <dubbo:service id="idGenContract" interface="org.lynn.idworker.contract.IdGenContract" ref="idGenService" timeout="1500"/>
</beans>